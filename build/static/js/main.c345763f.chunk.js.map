{"version":3,"sources":["config.js","Actions/Auth.Action.js","Actions/types.js","Components/AppBar.js","Pages/SignUp.js","Core/Auth/index.js","Pages/SignIn.js","Core/apiSubscribe.js","Actions/ToDo.Action.js","shared/utility.js","Components/ActivityTracker/Stopwatch.js","Components/ActivityTracker/Timer.js","Components/ActivityTracker/Modal.js","Components/TodoList/TodoList.js","Components/TodoList/AddTodoList.js","Components/TodoList/Index.js","Reducers/SubscribeNL.Reducer.js","Reducers/Auth.Reducer.js","Reducers/Articles.Reducer.js","Reducers/Todo.Reducer.js","Reducers/index.js","Reducers/Article.Reducer.js","Store/Store.js","Pages/Home.js","Pages/Dashboard.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["process","REACT_APP_API_URL","authSuccess","token","userId","type","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","useSelector","state","Auth","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","href","style","cursor","onClick","Copyright","align","Link","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useState","firstname","lastname","email","password","password2","error","success","values","setValues","handleChange","name","event","target","value","Container","component","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","user","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","data","alert","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","FormControlLabel","control","Checkbox","Button","justify","Box","mt","SignIn","useDispatch","auth","loading","redirectToReferrer","isSignup","authData","url","axios","post","expirationDate","getTime","expiresIn","setItem","action","to","redirectUser","setTodoLists","TodoListTitles","todoLists","setCompleteCount","CompleteCount","totalCompletes","initTotalTasks","get","res","setTotalTasks","totalTasks","fetchTodosFailed","updateObject","oldObject","updatedProperties","MyStopwatch","useStopwatch","autoStart","seconds","minutes","hours","days","isRunning","start","pause","reset","textAlign","fontSize","MyTimer","expiryTimestamp","useTimer","onExpire","warn","resume","restart","time","setSeconds","getSeconds","rand","Math","round","random","getModalStyle","top","left","transform","background","border","boxShadow","shadows","padding","SimpleModal","React","modalStyle","open","setOpen","Modal","onClose","aria-labelledby","aria-describedby","ToDoList","props","todos","setTodos","setIsLoading","useEffect","todoListName","todoData","handleArchiveComplete","archiveStatus","isVisibleData","patch","handleComplete","todo","isCompleteData","isComplete","_id","Completes","dtodos","map","dtodo","i","task","isVisible","creator","newtask","setNewTask","handleSubmit","e","ftodos","push","controlers","onKeyDown","keyCode","InputProps","endAdornment","InputAdornment","Divider","List","direction","ListItem","key","size","delete","prevTodos","filter","handleDelete","moment","createdAt","fromNow","checked","AddToDoList","setLoading","setnewtask","Todos","completeCount","initCompleteCount","params","initTodoLists","md","Accordion","AccordionSummary","expandIcon","aria-controls","initialState","getItem","authRedirectPath","authStart","authFail","authLogout","setAuthRedirectPath","path","reducer","articles","setTodoList","todoListData","combineReducers","Subscribe","payload","subscriber","article","content","persistedState","serializedState","parse","loadFromLocalStorage","composeEnhancers","composeWithDevTools","realtime","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","logger","Home","Dashboard","Routes","createMuiTheme","primary","blue","green","status","danger","ThemeProvider","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c345763f.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","import axios from 'axios';\r\n\r\nimport * as actionTypes from './types';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            \r\n        };\r\n        let url = 'https://wedowhatwecan.herokuapp.com/api/login';\r\n        if (!isSignup) {\r\n            url = 'https://wedowhatwecan.herokuapp.com/api/login';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 100000000);\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.userId);\r\n                dispatch(authSuccess(response.data.token, response.data.userId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};","export const SUBSCRIBE_NL = 'SUBSCRIBE_NL';\r\nexport const SUBSCRIBE_FAIL = 'SUBSCRIBE_FAIL';\r\nexport const GET_SUBSCRIBERS = 'GET_SUBSCRIBERS';\r\nexport const REMOVE_SUBSCRIBER = 'REMOVE_SUBSCRIBER';\r\n\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\n\r\nexport const SET_ARTICLES = 'SET_ARTICLES';\r\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\r\nexport const SET_ARTICLE = 'SET_ARTICLE';\r\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\r\nexport const REPLACE_ARTICLE = 'REPLACE_ARTICLE';\r\n\r\nexport const SET_TODO_LISTS = 'SET_TODO_LISTS';\r\nexport const SET_COMPLETE_COUNT = 'SET_COMPLETE_COUNT';\r\nexport const SET_TOTAL_TASKS = \"SET_TOTAL_TASKS\";\r\n\r\nexport const SET_TODOS = 'SET_TODOS';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const SET_TODO = 'SET_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const FETCH_TODOS_FAILED = 'FETCH_TODOS_FAILED';","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { FaUserAstronaut } from \"react-icons/fa\";\r\nimport { GoSignOut } from \"react-icons/go\";\r\nimport { GrLogin } from \"react-icons/gr\";\r\nimport { MdFiberNew } from \"react-icons/md\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signout, isAuthenticated } from \"../Core/Auth\";\r\nimport {logout} from '../Actions/Auth.Action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  const userId = useSelector(state => state.Auth.userId)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            We Do What We Can\r\n          </Typography>\r\n          { /*isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <Button color=\"inherit\"\r\n            style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                href=\"/admin/dashboard\"\r\n\r\n            >\r\n              admin Dashboard\r\n            </Button>\r\n        \r\n    )*/}\r\n\r\n     {userId && (\r\n            <IconButton color=\"inherit\"\r\n                href=\"/dashboard\"\r\n                \r\n            >\r\n            <FaUserAstronaut/>\r\n            </IconButton>\r\n        \r\n    )}\r\n    \r\n    {userId && (\r\n        \r\n            <IconButton color=\"inherit\"\r\n                 style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                \r\n                onClick={() =>\r\n                  logout()\r\n                }\r\n                href='/'\r\n            >\r\n            <GoSignOut/></IconButton>\r\n      \r\n    )}\r\n\r\n    \r\n    {!userId && (\r\n      <div>\r\n     \r\n\r\n                <IconButton color=\"inherit\"\r\n                href=\"/signup\"\r\n            >\r\n            <MdFiberNew/> <FaUserAstronaut/>\r\n            </IconButton>\r\n                / \r\n                \r\n               \r\n          </div>\r\n\r\n            \r\n    )}\r\n\r\n\r\n     {!userId && (\r\n     \r\n       \r\n                <IconButton\r\n                 \r\n                color=\"secondary\"\r\n                href=\"/signin\"\r\n                className='mr-3'\r\n                > <GrLogin/></IconButton>\r\n\r\n            \r\n    )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React , { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { signup } from \"../Core/Auth\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        firstname:'',\r\n        lastname:'',\r\n        email:'',\r\n        password:'',\r\n        password2:'',\r\n        error:false,\r\n        success: false\r\n    });\r\n\r\n    const { firstname, lastname, email, password, password2,  success, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        if(password==password2){\r\n                 setValues({ ...values, error: false });\r\n                 signup({ firstname, lastname, email, password, password2}).then(data => {\r\n                     if (data.error) {\r\n                         setValues({ ...values, error: data.error, success: false });\r\n                     } else {\r\n                         setValues({\r\n                             ...values,\r\n                             firstname:'',\r\n                             lastname:'',\r\n                             email:'',\r\n                             password:'',\r\n                             password2:'',\r\n                             error: \"\",\r\n                             success: true\r\n                         });\r\n                     }\r\n                 });\r\n        } else alert(\"Passwords Do Not Match\")\r\n    };\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={clickSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange(\"firstname\")}\r\n                value={firstname}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange(\"lastname\")}\r\n                value={lastname}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={handleChange(\"email\")}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n              />\r\n            </Grid>\r\n             <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"password2\")}\r\n                value={password2}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"./SignIn\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { API } from \"../../config\";\r\n\r\nexport const signup = user => {\r\n    return fetch(`http://localhost:5000/api/signup`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`http://localhost:5000/api/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== \"undefined\") {\r\n        localStorage.removeItem(\"jwt\");\r\n        next();\r\n        return fetch(`http://localhost:5000/api/signout`, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => {\r\n                console.log(\"signout\", response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == \"undefined\") {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem(\"jwt\")) {\r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { signin, authenticate, isAuthenticated } from \"../Core/Auth\";\r\nimport * as action from '../Actions/Auth.Action'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector(state => state.Auth);\r\n\r\nconst [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    \r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        dispatch(action.auth( email, password, true ))\r\n     \r\n        \r\n    };\r\n\r\n    const redirectUser = () => {\r\n     \r\n      if (auth.userId!==null) {\r\n          return <Redirect to=\"/dashboard\" />;\r\n      }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n  \r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handleChange(\"password\")}\r\n          />\r\n\r\n\r\n\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={clickSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"./SignUp\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    {redirectUser()}\r\n    </Container>\r\n  );\r\n}","import { API } from \"../config\";\r\n\r\nexport const subscribe = (email) => {\r\n    return fetch(`http://localhost:5000/api/subscribe/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n         \r\n        },\r\n        body: JSON.stringify({ email: email})\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nimport * as actionTypes from './types';\r\n\r\n\r\nexport const initTodoLists = (userId) =>{\r\n  return dispatch => {\r\n    axios.get(`api/todolists/${userId}`, {params:{\"userId\":userId}})\r\n      .then( res => {\r\n        console.log(res.data.todos)\r\n        dispatch(setTodoLists(res.data.todos));\r\n    }).catch(error => {\r\n      dispatch(fetchTodosFailed())\r\n    })\r\n\r\n  };\r\n};\r\n\r\nexport const setTodoLists =(TodoListTitles) => {\r\n  return {\r\n    type: actionTypes.SET_TODO_LISTS,\r\n    todoLists:TodoListTitles\r\n  }\r\n}\r\n\r\nexport const initCompleteCount = (userId) => {\r\n  return  dispatch => {\r\n    axios.get(`api/todolistCompletes/${userId}`)\r\n      .then(res => {\r\n        dispatch(setCompleteCount(res.data.Completes))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setCompleteCount = (CompleteCount) => {\r\n  return {\r\n    type: actionTypes.SET_COMPLETE_COUNT,\r\n    totalCompletes:CompleteCount\r\n  }\r\n}\r\n\r\nexport const initTotalTasks = (userId) => {\r\n  return dispatch => {\r\n    axios.get(`api/todolisttasksCreated/${userId}`)\r\n      .then(res => {\r\n        dispatch(setTotalTasks(res.data.totalTasks))\r\n      } )\r\n  }\r\n}\r\n\r\nexport const setTotalTasks = (totalTasks) => {\r\n  return {\r\n    type:actionTypes.SET_TOTAL_TASKS,\r\n    totalTasks:totalTasks\r\n  }\r\n}\r\n\r\n\r\nexport const initTodoList = () =>{\r\n  return dispatch => {\r\n  axios.get(`/api/todolistdata`)\r\n    .then(res=>{\r\n      console.log(res)\r\n      dispatch(setTodoList(res.todos))\r\n    })\r\n    .catch(error => {\r\n      dispatch(fetchTodosFailed())\r\n    })\r\n  }\r\n}\r\n\r\nexport const setTodoList =(Todos) => {\r\n  return {\r\n    type: actionTypes.SET_TODOS,\r\n    todos:Todos\r\n  }\r\n}\r\n\r\n\r\nexport const fetchTodosFailed = () => {\r\n  return {\r\n      type: actionTypes.FETCH_TODOS_FAILED\r\n  };\r\n};\r\n\r\n\r\n\r\n{/*\r\nexport const setTodos = ( todos ) => {\r\n  return {\r\n    type:SET_TODOS,\r\n    Todos:todos\r\n  }\r\n}\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    todo: todo \r\n  };\r\n};\r\n\r\n\r\n  \r\n  export function removeTodo(_id) {\r\n    return {\r\n      type: REMOVE_TODO,\r\n      _id: _id,\r\n    };\r\n  };\r\n\r\n  export const toggleTodoComplete = (todoId) => ({\r\n    type: TOGGLE_TODO,\r\n    payload: todoId\r\n  });\r\n  \r\n  export function updateTodo(todo) {\r\n    return {\r\n      type: UPDATE_TODO,\r\n      todo: todo,\r\n    };\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  */}","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = ( value, rules ) => {\r\n    let isValid = true;\r\n    if ( !rules ) {\r\n        return true;\r\n    }\r\n\r\n    if ( rules.required ) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if ( rules.minLength ) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if ( rules.maxLength ) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if ( rules.isEmail ) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test( value ) && isValid\r\n    }\r\n\r\n    if ( rules.isNumeric ) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test( value ) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","import React from 'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\n \r\nexport default function MyStopwatch() {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: true });\r\n \r\n \r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1>Stop Watch</h1>\r\n      <p>Stopwatch Demo</p>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={reset}>Reset</button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\n \r\nexport default function MyTimer({ expiryTimestamp }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    days,\r\n    isRunning,\r\n    start,\r\n    pause,\r\n    resume,\r\n    restart,\r\n  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\r\n \r\n \r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1>10min Timer </h1>\r\n      <p>Timer Demo</p>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button onClick={pause}>Pause</button>\r\n      <button onClick={resume}>Resume</button>\r\n      <button onClick={() => {\r\n        // Restarts to 5 minutes timer\r\n        const time = new Date();\r\n        time.setSeconds(time.getSeconds() + 300);\r\n        restart(time)\r\n      }}>Restart</button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {SiTimescale} from 'react-icons/si';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Stopwatch from '../ActivityTracker/Stopwatch';\r\nimport Timer from '../ActivityTracker/Timer';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst time = new Date();\r\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Timer expiryTimestamp={time}/>\r\n      <Stopwatch/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton type=\"button\" onClick={handleOpen}>\r\n        <SiTimescale/>\r\n      </IconButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {subscribe} from '../../Core/apiSubscribe';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../../App.css';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport moment from \"moment\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {setCompleteCount, initTotalTasks} from '../../Actions/ToDo.Action';\r\nimport { Container,ListItem, List, ListSubheader, Divider,Checkbox, Typography, IconButton   } from '@material-ui/core';\r\nimport { updateObject } from '../../shared/utility';\r\nimport TimeModal from '../ActivityTracker/Modal'\r\nimport { RiSendPlaneFill } from 'react-icons/ri';\r\nimport { MdArchive } from 'react-icons/md';\r\nimport {MdUnarchive } from 'react-icons/md';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nexport default function ToDoList(props) {\r\n\r\n  \r\n // const todos = useSelector(function(state) { return state.Todos });\r\n  \r\n const userId = useSelector(state => state.Auth.userId)\r\n const dispatch = useDispatch();\r\n\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const [isLoading , setIsLoading] = useState(false)\r\n\r\n    \r\n  useEffect (() => { \r\n     axios.get(`/api/todolist/${userId}/${props.todoListName}`)\r\n      .then(res => setTodos(res.data.todoData))\r\n      \r\n      \r\n  },  []  );\r\n\r\n\r\n\r\n  \r\n  const handleArchiveComplete = (archiveStatus) => {\r\n    let isVisibleData=archiveStatus;\r\n    \r\n    axios.patch(`api/archiveTodo/${props.todoListName}`,{isVisibleData})\r\n      .then(\r\n        axios.get(`/api/todolist/${userId}/${props.todoListName}`)\r\n      .then(res => setTodos(res.data.todoData))\r\n\r\n      )}\r\n     \r\n\r\n  const handleComplete = (todo) => {\r\n    let isCompleteData=true;\r\n    todo.isComplete==isCompleteData? isCompleteData=false:isCompleteData=true;  \r\n    \r\n    axios.patch(`api/CompleteTodo/${todo._id}`,{isCompleteData})\r\n      .then(res => {\r\n        axios.get(`api/todolistCompletes/${userId}`)\r\n        .then(res => {\r\n          dispatch(setCompleteCount(res.data.Completes))\r\n        })  \r\n      })\r\n     let dtodos =todos.map((dtodo, i)=> dtodo._id==todo._id?{...todo, isComplete:isCompleteData}:todos[i]);\r\n      setTodos(dtodos);\r\n      \r\n    \r\n};\r\n\r\nconst handleDelete = (todo, i) => {\r\n  \r\n    axios.delete(`/api/deletetodo/${todo}`)\r\n    .then(\r\n      setTodos( prevTodos => prevTodos.filter(ftodos => ftodos._id !==todo))\r\n      \r\n    ).then(\r\n      dispatch(initTotalTasks(userId))\r\n    )\r\n\r\n\r\n   \r\n};\r\n\r\n // const handleFakeDelete = (todo) => { \r\n //   \r\n //   axios.patch(`/api/editTodo/${todo._id}`, {...todo, isVisible: false})\r\n //   .then(function(response) {\r\n //    // dispatch(updateTodo(todo));\r\n //   })\r\n //   .catch(function(error) { console.log(error); });\r\n //   \r\n //   let dtodos =todos.map((dtodo, i)=> dtodo._id==todo._id?{...todo, isVisible:false}:todos[i]);\r\n //   setTodos(dtodos);\r\n // }\r\n\r\n \r\n  const [newtask, setNewTask] = useState({title:props.todoListName , task:'' , isComplete:false , isVisible: true , creator:userId })\r\n\r\n  const handleSubmit = (e) => {\r\n    setIsLoading(true)\r\n    axios.post('/api/addTodo' , {newtask} )\r\n      .then(res => {\r\n        console.log(res.data)\r\n        let ftodos = todos;\r\n        ftodos.push(res.data)\r\n        console.log(ftodos)\r\n        setTodos(ftodos)\r\n        dispatch(initTotalTasks(userId))\r\n        setIsLoading(false)\r\n        setNewTask({title:props.todoListName , task:'' , isComplete:false , isVisible: true , creator:userId})\r\n      })\r\n\r\n      \r\n     \r\n\r\n  }\r\n\r\n\r\n  function handleChange(event) { \r\n    setNewTask({ ...newtask, [event.target.name]: event.target.value});\r\n    \r\n  }\r\n \r\n  const archive = true;\r\n\r\n      return(\r\n        \r\n        <div className='TDLbackground'>\r\n        <Container maxWidth='sm'>\r\n        {props.controlers==true &&\r\n        <div>\r\n          \r\n                <TextField fullWidth= {true} variant=\"outlined\" label=\"Add New Todo\" type = \"text\"  name='task' \r\n                value={newtask.task} onChange={e => handleChange(e)} onKeyDown = {(e) => {e.keyCode==13 && handleSubmit()}} \r\n                InputProps={{\r\n                  endAdornment: <InputAdornment position=\"start\"><IconButton color='primary' onClick={handleSubmit} > <RiSendPlaneFill/> </IconButton></InputAdornment>,\r\n                }}\r\n              \r\n                />\r\n                      <IconButton onClick={() => handleArchiveComplete(false)} > <MdArchive/> </IconButton> <IconButton className='float-right' onClick={() => handleArchiveComplete(true)} > <MdUnarchive/> </IconButton>\r\n                <Divider/>\r\n        \r\n        </div>\r\n        }  \r\n        \r\n        <List>\r\n       \r\n     \r\n             {\r\n                 todos.map((todo, i) =>(\r\n                <div>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                    {todo.isVisible==true?\r\n                    <ListItem key={i} > \r\n\r\n                      <Grid xs={2}> \r\n                        <IconButton size='small' onClick = {()=>handleDelete(todo._id, i)}>\r\n                          <FaTrashAlt />\r\n                        </IconButton> \r\n                      </Grid>\r\n                      \r\n                      <Grid xs={9} >\r\n                        <Typography className={todo.isComplete ? 'complete' : null} align='center'  onClick={()=>handleComplete(todo)}>\r\n                           {todo.task} <br/> {moment(todo.createdAt).fromNow(true)} ago \r\n                        </Typography>\r\n                      </Grid>  \r\n                    { todo.isComplete==false?\r\n                      <Grid xs={1} className='mr-2'>\r\n                      <TimeModal/>\r\n                      \r\n                    </Grid> \r\n                    :<Grid xs={1} />\r\n                    }\r\n                    <Grid xs={1} className='mr-2'>\r\n                        \r\n                        <Checkbox onChange={()=>handleComplete(todo)} checked= {todo.isComplete}/>\r\n                      </Grid>  \r\n                    </ListItem>\r\n                    :null}\r\n                </Grid>\r\n                    \r\n                    \r\n                    </div>\r\n                ))\r\n\r\n             }\r\n\r\n        </List>\r\n            \r\n        \r\n        </Container>\r\n       </div>\r\n       \r\n    )\r\n};","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { RiSendPlaneFill } from 'react-icons/ri';\r\n\r\nexport default function AddToDoList(props) {\r\n\r\n    const userId = useSelector(state => state.Auth.userId)\r\n   const [loading, setLoading]= useState(false)\r\n    const [newtask, setnewtask] = useState({title:'' , creator:userId , task:'create a list' , isComplete:false , isVisible:true })\r\n\r\n    const handleChange = (event) => { \r\n        setLoading(true)\r\n        setnewtask({ [event.target.name]: event.target.value, task:'create a list' , creator:userId });\r\n        setLoading(false)\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        axios.post('/api/addTodo/' , {newtask})\r\n        setnewtask({title:'' , creator:userId , task:'create a list' , isComplete:false , isVisible:true });\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form  >\r\n                <TextField fullWidth= {true} variant=\"standard\" label=\"Add New Todo List\" type = \"text\"  name='title' value={newtask.title} onChange={e => handleChange(e)} \r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"start\"><IconButton color='primary' onClick={()=>handleSubmit()} > <RiSendPlaneFill/> </IconButton></InputAdornment>,\r\n                  }}\r\n                />\r\n               \r\n            </form>\r\n        \r\n        </div>\r\n    )\r\n\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport TodoList from './TodoList';\r\nimport TodoInput from './TodoInput';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddToDoList from './AddTodoList' \r\nimport { Container } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {initTodoLists, setTodoLists, initCompleteCount, initTotalTasks} from '../../Actions/ToDo.Action'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport default function ToDoList(props) {\r\n\r\n   // const [todoLists, setTodoLists] = useState([])\r\n    // const [todos, setTodos]=useState([])\r\n    \r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const userId = useSelector(state => state.Auth.userId)\r\n     const todoLists = useSelector(state => state.Todos.todoLists)\r\n     const completeCount = useSelector(state => state.Todos.totalCompletes)\r\n     const totalTasks = useSelector(state =>state.Todos.totalTasks)\r\n   //  const [completeCount , setCompleteCount] = useState(0)\r\n     \r\n    \r\n     \r\n\r\n   useEffect (() => { \r\n       \r\n      dispatch(initCompleteCount(userId));\r\n      dispatch(initTodoLists(userId));\r\n      dispatch(initTotalTasks(userId));\r\n      \r\n    \r\n  },  []  );\r\n\r\n  \r\n\r\n  return(\r\n    \r\n    <div>\r\n    <Grid\r\n    container\r\n    direction=\"row\"\r\n    justify=\"space-around\"\r\n    alignItems=\"flex-start\"\r\n  >\r\n\r\n  <Grid xs={12} md={6}>\r\n    <Accordion >\r\n    <AccordionSummary\r\n    expandIcon={<ExpandMoreIcon />}\r\n    aria-controls=\"panel1a-content\"\r\n    id=\"panel1a-header\"\r\n  >\r\n    Todays Agenda\r\n  </AccordionSummary>\r\n    <TodoList todoListName='TodaysAgenda' controlers={false}/>\r\n    </Accordion>\r\n    \r\n \r\n   \r\n    </Grid>\r\n\r\n    <Grid xs={12} md={4} >\r\n    <h1>{completeCount} / {totalTasks}</h1>\r\n    \r\n    <AddToDoList />\r\n\r\n    \r\n\r\n    {console.log(todoLists)}\r\n    {\r\n      \r\n      todoLists.map((todo) =>(\r\n\r\n        \r\n      <Accordion >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          {todo}\r\n        </AccordionSummary>\r\n       \r\n          <TodoList todoListName={todo}  controlers={true} />\r\n      </Accordion>\r\n       ))}\r\n    </Grid>  \r\n    \r\n    </Grid>\r\n    </div>\r\n  )\r\n}","import { SUBSCRIBE_NL, SUBSCRIBE_FAIL,GET_SUBSCRIBERS, REMOVE_SUBSCRIBER } from '../Actions/types';\r\n  \r\n  const initialState = {\r\n    email:''\r\n  };\r\n  \r\n  export default function subscribeReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case SUBSCRIBE_FAIL:\r\n      case SUBSCRIBE_NL:\r\n        return action.subscriber;\r\n      \r\n      case GET_SUBSCRIBERS:  \r\n      return action.email;\r\n      case REMOVE_SUBSCRIBER:\r\n        return state.filter(subscriber => subscriber._id !== action._id);\r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as actionTypes from '../Actions/types';\r\nimport { updateObject } from '../shared/utility';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    userId: localStorage.getItem('userId'),\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject( state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     } );\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { SET_ARTICLES, ADD_ARTICLE, REMOVE_ARTICLE, REPLACE_ARTICLE } from '../Actions/types';\r\n\r\nconst initialState = { articles: [] }\r\nexport default function articlesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ARTICLES:\r\n      return action.articles;\r\n    case ADD_ARTICLE:\r\n      return [action.article, ...state];\r\n    case REMOVE_ARTICLE:\r\n      return state.filter(article => article._id !== action._id);\r\n    case REPLACE_ARTICLE:\r\n      return state.map(function(article) {\r\n        if (article._id === action.article._id) {\r\n          return {\r\n            ...article,\r\n            title: action.article.title,\r\n            content: action.article.content,\r\n          }\r\n        } else return article;\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as actionTypes from '../Actions/types';\r\nimport {updateObject} from '../shared/utility';\r\n\r\nconst initialState= {\r\n  todoLists:[],\r\n  totalCompletes:0,\r\n  totalTasks:0\r\n\r\n};\r\n\r\nconst setTodoLists = (state, action) => {\r\n  return updateObject(state,{\r\n    todoLists:action.todoLists\r\n  }\r\n\r\n  )\r\n};\r\n\r\nconst setTodoList = (state, action) => {\r\n  return updateObject(state,{\r\n   todos:action.todoListData\r\n  }\r\n\r\n  )\r\n};\r\n\r\nconst setCompleteCount =(state, action) => {\r\n  return updateObject(state,{\r\n    totalCompletes:action.totalCompletes\r\n  })\r\n}\r\n\r\nconst setTotalTasks = (state, action) => {\r\n  return updateObject(state, {totalTasks:action.totalTasks})\r\n}\r\n\r\n\r\n\r\nconst reducer = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_TODO_LISTS: return setTodoLists( state, action );\r\n    case actionTypes.SET_TODOS: return setTodoList( state, action );\r\n    case actionTypes.SET_COMPLETE_COUNT: return setCompleteCount( state, action );\r\n    case actionTypes.SET_TOTAL_TASKS: return setTotalTasks( state, action );\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport Subscribe from './SubscribeNL.Reducer';\r\nimport Auth from './Auth.Reducer';\r\nimport articles from './Articles.Reducer';\r\nimport article from './Article.Reducer';\r\nimport Todos from './Todo.Reducer';\r\n\r\n\r\nexport default combineReducers({\r\n    Subscribe,\r\n    Auth:Auth,\r\n    articles: articles,\r\n    article: article,\r\n    Todos\r\n});\r\n\r\n","import { SET_ARTICLE } from '../Actions/types';\r\n\r\nexport default function articleReducer(state = {}, action) { \r\n  switch (action.type) {\r\n    case SET_ARTICLE: \r\n      return action.article;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware, } from 'redux';\r\nimport {composeWithDevTools, actionCreators,} from 'redux-devtools-extension';\r\n// middlewares\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from '../Reducers';\r\n\r\n\r\n\r\n\r\nconst initialState = {};\r\n\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    }catch (e) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n * \r\n \r\n */\r\nconst composeEnhancers = composeWithDevTools({ \r\n    name: `Redux`,\r\n    realtime: true,\r\n    trace: true,\r\n    traceLimit: 25\r\n}); \r\n\r\n\r\n\r\n\r\n const store = createStore(rootReducer, persistedState, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware, logger )\r\n   \r\n));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default store;","import React, { useState } from 'react';\r\n\r\n\r\nexport default function Home() {\r\n    \r\n    return(\r\n        <h1>HelloWorldfromHome</h1>\r\n\r\n    )\r\n};\r\n","import React, { useState } from 'react';\r\nimport UserTodoList from \"../Components/TodoList/Index\"\r\n\r\nexport default function Dashboard() {\r\n    \r\n    return(\r\n        <div>\r\n        <h1>HelloWorld</h1>\r\n        <UserTodoList/>\r\n        </div>\r\n    )\r\n};\r\n","import React, {useState, useEffect}from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport AppBar from \"./Components/AppBar\"\r\nimport Home from \"./Pages/Home\";\r\nimport SignUp from \"./Pages/SignUp\";\r\nimport SignIn from \"./Pages/SignIn\";\r\nimport ToDoList from \"./Components/TodoList/Index\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\n\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from './Actions/Auth.Action'\r\n\r\n\r\nconst Routes = () => {\r\n\r\n const dispatch = useDispatch()\r\n\r\n useEffect (() => { \r\n  dispatch(actions.authCheckState())\r\n     \r\n \r\n },  []  );\r\n   \r\n const auth = useSelector(state=>state.Auth)\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: green,\r\n  },\r\n  status: {\r\n    danger: 'orange',\r\n  },\r\n});\r\n\r\n\r\n\r\nreturn ( \r\n  \r\n  \r\n   <ThemeProvider theme={theme}>\r\n    <BrowserRouter>\r\n   \r\n        <AppBar/>\r\n        <Switch>\r\n           \r\n            <Route exact path=\"/\" component={Home}  />\r\n            <Route path=\"/SignUp\" exact component={SignUp} />\r\n            <Route path=\"/SignIn\" exact component={SignIn} />\r\n            <Route path=\"/todolist\" exact component={ToDoList}/>\r\n            <Route path=\"/dashboard\" exact component={Dashboard}/>\r\n        </Switch>\r\n        \r\n    </BrowserRouter>\r\n   </ThemeProvider>\r\n  \r\n)\r\n\r\n};\r\n\r\n\r\n\r\nexport default Routes;","import React, {useState, useEffect}from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport AppBar from \"./Components/AppBar\"\n\nimport SignUp from \"./Pages/SignUp\";\nimport SignIn from \"./Pages/SignIn\";\nimport ToDoList from \"./Components/TodoList/Index\";\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { Provider } from 'react-redux';\nimport store from \"./Store/Store\";\n\nimport Routes from './Routes';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from './Actions/Auth.Action'\n\nconst App = () => {\n\n   \n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: green,\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\n\n\nreturn ( \n  <Provider store={store}>\n  \n  <Routes/>\n\n  </Provider>\n)\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}